from google.colab import files
uploaded = files.upload()


# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler


import zipfile
import os
# Path to the uploaded zip file
zip_file_path = 'archive.zip'
# Extract the zip file
with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    zip_ref.extractall()
# List the files in the extracted folder
extracted_files = os.listdir()
extracted_files


import pandas as pd
# Load the dataset
df = pd.read_csv('Wholesale customers data.csv')
# Display the first few rows to check if the data is loaded correctly
df.head()


# Select the numerical features (drop 'Channel' and 'Region')
X = df.drop(['Channel', 'Region'], axis=1)
# Standardize the features
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
# Check the scaled data
X_scaled[:5]


from sklearn.cluster import KMeans
# Apply KMeans clustering
kmeans = KMeans(n_clusters=3, random_state=42)
y_kmeans = kmeans.fit_predict(X_scaled)
# Add the cluster labels to the original dataframe
df['Cluster'] = y_kmeans
# Display the first few rows with the cluster labels
df.head()




# Display the cluster centers (in the scaled space)
cluster_centers = kmeans.cluster_centers_
print('Cluster Centers (Scaled Data):\n', cluster_centers)
# Group by cluster and calculate the mean of each cluster
cluster_summary = df.groupby('Cluster').mean()
print(cluster_summary)



from sklearn.decomposition import PCA
import matplotlib.pyplot as plt
# Perform PCA to reduce the data to 2D
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)
# Plot the clusters
plt.figure(figsize=(8, 6))
plt.scatter(X_pca[:, 0], X_pca[:, 1], c=df['Cluster'], cmap='viridis')
plt.title('Clusters Visualization')
plt.xlabel('PCA Component 1')
plt.ylabel('PCA Component 2')
plt.show()



# Centroids of each cluster (in scaled space)
centroids = kmeans.cluster_centers_
# Display the centroids
centroids_df = pd.DataFrame(centroids, columns=X.columns)
print(centroids_df)


# Reverse the scaling to get the centroids in the original units
centroids_original = scaler.inverse_transform(centroids)
# Create a DataFrame with original units
centroids_original_df = pd.DataFrame(centroids_original, columns=X.columns)
print(centroids_original_df)


